import { useEffect, useRef, useState } from 'react';
import { Inter } from 'next/font/google';
import Head from 'next/head';

import styles from '~/styles/Home.module.css';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
  // const [products, setProducts] = useState<
  //   Array<{ id: string; properties: Array<{ id: string }> }>
  // >([]);
  // useEffect(() => {
  //   fetch('/api/get-items')
  //     .then(res => res.json())
  //     .then(data => setProducts(data.items));
  // }, []);
  const [products, setProducts] = useState<
    Array<{ id: string; name: string; createdAt: string }>
  >([]);
  useEffect(() => {
    fetch('/api/get-products')
      .then(res => res.json())
      .then(data => setProducts(data.items));
  }, []);

  const inputRef = useRef<HTMLInputElement>(null);

  const handleClick = () => {
    if (inputRef.current === null || inputRef.current.value === '') {
      alert('이름을 넣어주세요.');
      return;
    }
    fetch(`/api/add-item?name=${inputRef.current.value}`)
      .then(res => res.json())
      .then(data => alert(data.message));
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div>
          <input
            className="placeholder:italic placeholder:text-slate-400 block bg-white w-96 border border-slate-300 rounded-md py-2 pl-3 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1 sm:text-sm"
            ref={inputRef}
            type="text"
            placeholder="name"
          />
          <button onClick={handleClick}>Add Jacket</button>
          <div>
            <p>Product List</p>
            {/* {products &&
              products.map(item => (
                <div key={item.id}>
                  {JSON.stringify(item)}
                  {item.properties &&
                    Object.entries(item.properties).map(([key, value]) => (
                      <button
                        key={key}
                        onClick={() => {
                          fetch(
                            `/api/get-detail?pageId=${item.id}&propertyId=${value.id}`,
                          )
                            .then(res => res.json())
                            .then(data => alert(JSON.stringify(data.detail)));
                        }}
                      >
                        {key}
                      </button>
                    ))}
                  <br />
                  <br />
                </div>
              ))} */}
            {products &&
              products.map(item => (
                <div key={item.id}>
                  {item.name}
                  <span>{item.createdAt}</span>
                </div>
              ))}
          </div>
        </div>
      </main>
    </>
  );
}
